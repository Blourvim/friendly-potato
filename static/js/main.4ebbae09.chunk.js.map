{"version":3,"sources":["AnimeCard.js","SearchBar.js","App.js","index.js"],"names":["useStyles","makeStyles","root","marginTop","width","borderRadius","paddingTop","marginBottom","backgroundColor","content","paddingBottom","color","media","padingTop","AnimeCard","props","classes","console","log","info","image_url","mal_id","title","url","synopsis","Card","className","href","rel","target","CardActionArea","CardMedia","component","alt","height","image","CardContent","Typography","gutterBottom","variant","theme","suggestionContainer","padding","listItem","display","background","minWidth","borderTopLeftRadius","borderBottomLeftRadius","avatar","fontSize","whiteSpace","overflow","textOverflow","ul","textField","text","fontWeight","SearchBar","useState","setValue","result","setResult","undefined","anime","setAnime","state","setState","handleSearch","useCallback","debounce","value","length","axios","get","then","res","Object","entries","data","results","catch","err","error","Container","align","TextField","id","onChange","e","handleChange","label","Array","isArray","slice","map","item","onClick","animeInfo","firstChild","pickAnime","Avatar","src","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4ebbae09.chunk.js","sourcesContent":["import React from 'react';\nimport {Card,CardActionArea,Typography,CardMedia,CardContent} from '@material-ui/core'\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n\n    root:{\n      marginTop:'2rem',\n        width:'345px',\n        borderRadius:'15px',\n        paddingTop:'40px',\n        marginBottom:'40px',\n        backgroundColor:'#9bc8dc'\n      },\n    content:{\n      paddingBottom:'30px',\n      backgroundColor:'#9bc8dc',\n    color:'#36454f',\n\n\n    },\n    media:{\n      width:'auto',\n      padingTop:'30px'\n    }\n\n\n})\n\n\nconst AnimeCard =(props)=>{\n\n    const classes = useStyles()\nconsole.log(props)\nconst {mal_id,image_url,title,url,synopsis} = props.info\nreturn(\n    <Card className={classes.root}>\n      <a href={url} rel='noreferrer'target='_blank'>\n    <CardActionArea>\n      <CardMedia\n        component=\"img\"\n        alt={title}\n        height=\"auto\"\n        image={image_url}\n        title={title}\n        className={classes.media}\n      />\n    </CardActionArea>\n    </a>\n      <CardContent className={classes.content}>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n        {title}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {synopsis}\n        </Typography>\n      </CardContent>\n\n  </Card>\n)\n\n}\n\nexport default AnimeCard","import React,{useState,useCallback} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios';\nimport debounce from 'lodash.debounce';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Typography } from '@material-ui/core';\nimport AnimeCard from './AnimeCard';\nconst useStyles = makeStyles((theme) => ({\n  \n  suggestionContainer:{\n        marginTop:'100px',\n        padding:'0px'\n\n\n  },\n  listItem:{\n    height:'60px',\n    display:'flex',\n    background:'hsla(240, 100%, 80%, 0.2) ',\n    width:'60%',\n    marginTop:'14px',\n    minWidth:'330px',\n    borderRadius:'15px',\n    borderTopLeftRadius:'60px',\n    borderBottomLeftRadius:'60px', \n   \n  },\n  avatar:{\n      height:'60px',\n      width:'60px'\n  },\n  title:{\n      marginTop:'14px',\n      fontSize:'1.3rem',\n      color:'#e5e4e2',\n      width:'90%',\n      whiteSpace:'nowrap',\n      overflow:'hidden',\n      textOverflow:'ellipsis'\n  }\n  ,ul:{\n      padding:'0'\n  },\n  textField:{\n      width:'35%',\n      minWidth:'330px',\n  },\n  text:{\n    marginBottom:'3rem',\n    color:'#36454f',\n    fontWeight:'bold'\n    \n  }\n  \n}));\n\n\n\n\n\n\nexport default function SearchBar() {\n  const [value, setValue] = useState(\"\");\n  const [result,setResult]= useState(false);\n  const [malId,setMalId]= useState(undefined);\n  const [anime,setAnime]=useState(false);\n  const [state,setState]=useState(false);\n\nconst pickAnime=(e,animeInfo)=>{\n  console.log(e.target.firstChild.data);\n  setAnime({...animeInfo});\n  setState(true)\n  setResult(e.target.firstChild.data);\n  e.target.value =\"hello\"\n}\n  const handleChange = (e) => {\n    const { value } = e.target;\n    setValue(value);\n    handleSearch(value);\n  setResult(false)\n  setAnime(false)\n  setState(false)\n\n\n\n  };\n  const handleSearch = useCallback(\n    debounce((value) => {\n      if(value.length >= 3){\n\n        axios.get(`https://api.jikan.moe/v3/search/anime?q=${value}&genre=12&genre_exclude=0`)\n        .then(res =>{setResult(Object.entries(res.data.results))\n            console.log(res)\n        \n        } )\n        .catch(err => console.error(err));\n\n\n      }\n\n    }, 500),\n    []\n  );\n  \n  const classes = useStyles();\n\n\n\n  return (\n    <Container align='center' className={classes.suggestionContainer}>\n    <Typography className={classes.text} variant='h3'>Find Anime</Typography>\n\n      <div>\n       <TextField  className={classes.textField}Â id=\"filled-basic\" onChange={(e)=>handleChange(e)} label=\"Type Here\" variant=\"filled\" />\n\n        </div>\n      <div>\n\n   <ul className={classes.ul}>{Array.isArray(result)&&result.slice([0], [10]).map((item)=>{          \n        const {mal_id,title,image_url,url,synopsis} = item[1];    \n        return(\n        <li \n        id={mal_id}\n        onClick={(e)=>pickAnime(e,{mal_id,title,image_url,url,synopsis})}\n        key={mal_id}\n        className={classes.listItem}\n        >\n            <Avatar className={classes.avatar} src={image_url}>\n\n            </Avatar>\n          <Typography className={classes.title}>{title}</Typography>\n\n          </li>)\n      })}</ul>\n        {}\n{state &&\n<AnimeCard info={anime}/>}\n   </div> \n\n\n         \n\n           </Container>);           \n\n}\n","import React from 'react';\nimport SearchBar from './SearchBar';\nconst App = ()=>{\n\n   return(\n      <>\n<SearchBar/>\n           </>\n      )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport App from './App.js';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}